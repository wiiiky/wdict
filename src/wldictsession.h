/*
 * Copyright (C) 2014-2014 Wiky L(wiiiky@yeah.net)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * this file is generated by gobj(https://github.com/wiiiky/gobj)
 */

#ifndef __WL_DICT_SESSION_H__
#define __WL_DICT_SESSION_H__

#include <gtk/gtk.h>
#include <libsoup/soup.h>

G_BEGIN_DECLS
/* Macro for casting a pointer to a WlDictSession or WlDictSessionClass pointer.
 * Macros for testing whether `object' or `klass' are of type WL_TYPE_DICT_SESSION.
 */
#define WL_TYPE_DICT_SESSION	(wl_dict_session_get_type())
#define WL_DICT_SESSION(obj)	(G_TYPE_CHECK_INSTANCE_CAST ((obj), WL_TYPE_DICT_SESSION, WlDictSession))
#define WL_DICT_SESSION_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), WL_TYPE_DICT_SESSION, WlDictSessionClass))
#define WL_IS_DICT_SESSION(obj)	(G_TYPE_CHECK_INSTANCE_TYPE ((obj), WL_TYPE_DICT_SESSION))
#define WL_IS_DICT_SESSION_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), WL_TYPE_DICT_SESSION))
#define WL_DICT_SESSION_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), WL_TYPE_DICT_SESSION, WlDictSessionClass))
typedef struct _WlDictSession WlDictSession;
typedef struct _WlDictSessionClass WlDictSessionClass;

typedef void (*WlDictSessionCallback) (const gchar * from,
									   const gchar * to, const gchar * src,
									   const gchar * res,
									   const gchar * errorString,
									   gpointer data);

struct _WlDictSession {
	SoupSession parent;
	/*Private */
	GCancellable *cancellable;
};

struct _WlDictSessionClass {
	SoupSessionClass parentKlass;
	/*Private */
};

GType wl_dict_session_get_type(void) G_GNUC_CONST;

/* Public */
WlDictSession *wl_dict_session_new(void);

void wl_dict_session_query(WlDictSession * session,
						   const gchar * queryString,
						   WlDictSessionCallback callback, gpointer data);

G_END_DECLS
#endif
